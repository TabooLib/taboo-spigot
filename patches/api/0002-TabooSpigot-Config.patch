From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kylepoops <62238380+Kylepoops@users.noreply.github.com>
Date: Fri, 24 Jun 2022 10:52:33 +0800
Subject: [PATCH] TabooSpigot Config


diff --git a/src/main/java/ink/ptms/taboospigot/config/TabooSpigotConfig.java b/src/main/java/ink/ptms/taboospigot/config/TabooSpigotConfig.java
new file mode 100644
index 0000000000000000000000000000000000000000..2a3a6678b9230a322d3a7b205b93cbf5b9a0dc55
--- /dev/null
+++ b/src/main/java/ink/ptms/taboospigot/config/TabooSpigotConfig.java
@@ -0,0 +1,99 @@
+package ink.ptms.taboospigot.config;
+
+import com.google.common.base.Throwables;
+import org.bukkit.Bukkit;
+import org.bukkit.configuration.InvalidConfigurationException;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.File;
+import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
+import java.util.logging.Level;
+
+public class TabooSpigotConfig {
+    public static File file;
+    public static YamlConfiguration config = new YamlConfiguration();
+
+    private static boolean isLoaded = false;
+    public static void init(File configFile) throws IOException {
+        if (isLoaded) return;
+        file = configFile;
+
+        if (!file.exists()) {
+            file.createNewFile();
+        }
+
+        try {
+            config.load(file);
+        } catch (InvalidConfigurationException e) {
+            Bukkit.getLogger().log(Level.SEVERE, "[TabooSpigot] Failed to load config file.", e);
+        }
+        config.options().copyDefaults(true);
+
+        loadConfig();
+    }
+    static void loadConfig() {
+        if(isLoaded) return;
+        for (Method method : TabooSpigotConfig.class.getDeclaredMethods()) {
+            if (Modifier.isPrivate(method.getModifiers()) && method.getName().startsWith("read")) {
+                if (method.getParameterTypes().length == 0 && method.getReturnType() == Void.TYPE) {
+                    try {
+                        method.setAccessible(true);
+                        method.invoke(null);
+                    } catch (Exception ex) {
+                        Bukkit.getLogger().log(Level.SEVERE, "Failed to read TabooSpigotConfig", ex);
+                    }
+                }
+            }
+        }
+
+        try {
+            config.save(file);
+        } catch (IOException ex) {
+            Bukkit.getLogger().log(Level.SEVERE, "Failed to save TabooSpigotConfig", ex);
+        }
+        isLoaded = true;
+    }
+
+    private static String getString(String path, String def) {
+        config.addDefault(path, def);
+        return config.getString(path, def);
+    }
+    public static int getInteger(String path, int def) {
+        config.addDefault(path, def);
+        return config.getInt(path, def);
+    }
+
+    public static double getDouble(String path, double def) {
+        config.addDefault(path, def);
+        return config.getDouble(path, def);
+    }
+
+    public static boolean getBoolean(String path, boolean def) {
+        config.addDefault(path, def);
+        return config.getBoolean(path, def);
+    }
+
+    public static String mavenCentralRepository;
+    public static boolean ignoreIllegalAccessCheck;
+    public static boolean ignoreSecurityManagerCheck;
+    public static boolean ignoreOfflineModeNotify;
+
+    private static void readMavenCentralRepository() {
+        mavenCentralRepository = getString("maven-central-repository", "https://maven.aliyun.com/repository/central");
+    }
+
+    private static void readIgnoreIllegalAccessCheck() {
+        ignoreIllegalAccessCheck = getBoolean("ignore-illegal-access-check", true);
+    }
+
+    private static void readIgnoreSecurityManagerCheck() {
+        ignoreSecurityManagerCheck = getBoolean("ignore-security-manager-check", true);
+    }
+
+    private static void readIgnoreOfflineModeNotify() {
+        ignoreOfflineModeNotify = getBoolean("ignore-offline-mode-notify", true);
+    }
+}
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index e756edf56995f4552387c2e1082307eb3dd48bb3..f176b49972db16c28662353a2d83efce2b4ae140 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1920,6 +1920,13 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
         {
             throw new UnsupportedOperationException("Not supported yet.");
         }
+
+        @NotNull
+        public org.bukkit.configuration.file.YamlConfiguration getTabooSpigotConfig()
+        {
+            throw new UnsupportedOperationException("Not supported yet.");
+        }
+
         // Paper end
 
         /**
